package com.cjss.DailyActivities.entity;

import javax.persistence.*;
import java.util.Objects;

@Entity
@Table(name="person")
public class Person {
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)       // Id is autogenerated in sequence(1,2,3...).Other values passed as input will be ignored.
    private Integer id;
    @Column
    private String name;
//    @ManyToOne(fetch = FetchType.LAZY)
//    private FoodTime foodTime;

    @ManyToOne
    @JoinColumn(name="food", nullable=false)
    private FoodTime foodTime;

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public FoodTime getFoodTime() {
        return foodTime;
    }

    public void setFoodTime(FoodTime foodTime) {
        this.foodTime = foodTime;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Person person = (Person) o;
        return id==((Person) o).getId() && name==((Person) o).getName() &&
                foodTime.getPersons().equals(((Person) o).getFoodTime().getPersons()) &&
                foodTime.getFoodItem().getBreakfastItem()==((Person) o).foodTime.getFoodItem().getBreakfastItem() &&
                foodTime.getFoodItem().getLunchItem()==((Person) o).foodTime.getFoodItem().getLunchItem() &&
                foodTime.getFoodItem().getDinnerItem()==((Person) o).foodTime.getFoodItem().getDinnerItem() &&
                foodTime.getFoodItem().getDate()==((Person) o).foodTime.getFoodItem().getDate() &&
                foodTime.getBreakfastTime() == ((Person) o).getFoodTime().getBreakfastTime() &&
                foodTime.getLunchTime() == ((Person) o).getFoodTime().getLunchTime() &&
                foodTime.getDinnerTime() == ((Person) o).getFoodTime().getDinnerTime() &&
                foodTime.getDate() == ((Person) o).getFoodTime().getDate();
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, foodTime);
    }
}
